{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onMoviesChange","useState","setTitle","chosenMovie","setChosenMovie","isLoading","setIsLoading","hasError","setHasError","console","log","deafultImage","useMemo","handleTitleChange","useCallback","event","target","value","onSubmit","preventDefault","query","resultTitle","toLowerCase","trim","fetch","then","res","json","catch","Response","Error","data","Poster","Title","Plot","imdbID","finally","htmlFor","type","id","placeholder","classNames","onChange","disabled","onClick","App","setMovies","newMovie","find","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,wBCFZ,IAAMC,EAA6B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC3C,EAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACA,EAAsCD,mBAAuB,MAA7D,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KAGAC,QAAQC,IAAIP,GAEZ,IAAMQ,EAAeC,mBAAQ,WAC3B,MAAO,8DACN,IAEGC,EAAoBC,uBACxB,SAACC,GACCP,GAAY,GACZN,EAASa,EAAMC,OAAOC,SAExB,IA2CF,OACE,qCACE,uBAAM9B,UAAU,aAAa+B,SA1CN,SAACH,GAC1BA,EAAMI,iBAEN,IC/BqBC,ED+BfC,EAAc9B,EAAM+B,cAAcC,OAExCjB,GAAa,ICjCQc,EDmCZC,EClCJG,MAAM,GAAD,OAHE,2CAGF,cAAiBJ,IAC1BK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,wBD+BNL,MAAK,SAACM,GACL,GAAI,UAAWA,EACb,MAAM,IAAID,MAGZ,OAAOC,KAERN,MAAK,YAEY,IADhBO,EACe,EADfA,OAAQC,EACO,EADPA,MAAOC,EACA,EADAA,KAAMC,EACN,EADMA,OAErB/B,EAAe,CACbb,MAAO0C,EACPzC,YAAa0C,EACb7C,OAAmB,QAAX2C,EAAmBrB,EAAeqB,EAC1CtC,QAAQ,8BAAD,OAAgCyC,GACvCrC,OAAQqC,OAGXP,OAAM,WACLpB,GAAY,MAEb4B,SAAQ,kBAAM9B,GAAa,OAa5B,UACE,sBAAKnB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQkD,QAAQ,cAAjC,yBAIA,qBAAKlD,UAAU,UAAf,SACE,uBACE,UAAQ,aACRmD,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZrD,UAAWsD,IAAW,QAAS,CAC7B,YAAalC,IAEfU,MAAO1B,EACPmD,SAAU7B,MAIbN,GACC,mBAAGpB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRmD,KAAK,SACLnD,UAAWsD,IAAW,kBAAmB,CACvC,aAAcpC,IAEhBsC,UAAWpD,EANb,SAQGY,EAAc,eAAiB,mBAInCA,GACC,qBAAKhB,UAAU,UAAf,SACE,wBACE,UAAQ,YACRmD,KAAK,SACLnD,UAAU,oBACVyD,QAzDS,WACjBzC,IACFH,EAAeG,GACfD,EAAS,IACTE,EAAe,QAiDP,qCAaPD,GACC,sBAAKhB,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOiB,WEhIf0C,EAAM,WACjB,MAA4B5C,mBAAkB,IAA9C,mBAAOL,EAAP,KAAekD,EAAf,KAiBA,OACE,sBAAK3D,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEa,eAvBe,SAAC+C,GACJnD,EAAOoD,MAAK,SAAA9D,GAAK,OAAIA,EAAMY,SAAWiD,EAASjD,WAMjEgD,GAAU,SAAAG,GACR,MAAM,GAAN,mBACKA,GADL,CAEEF,gBCfRG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cb728fc8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useCallback, useMemo, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onMoviesChange: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onMoviesChange }) => {\n  const [title, setTitle] = useState('');\n  const [chosenMovie, setChosenMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  // eslint-disable-next-line no-console\n  console.log(chosenMovie);\n\n  const deafultImage = useMemo(() => {\n    return 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  }, []);\n\n  const handleTitleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setHasError(false);\n      setTitle(event.target.value);\n    },\n    [],\n  );\n\n  const handleSubmitSearch = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const resultTitle = title.toLowerCase().trim();\n\n    setIsLoading(true);\n\n    getMovie(resultTitle)\n      .then((data) => {\n        if ('Error' in data) {\n          throw new Error();\n        }\n\n        return data;\n      })\n      .then(({\n        Poster, Title, Plot, imdbID,\n      }: MovieData) => {\n        setChosenMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster === 'N/A' ? deafultImage : Poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        });\n      })\n      .catch(() => {\n        setHasError(true);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleAddMovie = () => {\n    if (chosenMovie) {\n      onMoviesChange(chosenMovie);\n      setTitle('');\n      setChosenMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmitSearch}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': hasError,\n              })}\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!title}\n            >\n              {chosenMovie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {chosenMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {chosenMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={chosenMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=94c531b6';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onMoviesChange = (newMovie: Movie) => {\n    const duplicate = movies.find(movie => movie.imdbId === newMovie.imdbId);\n\n    if (duplicate) {\n      return;\n    }\n\n    setMovies(prevMovies => {\n      return [\n        ...prevMovies,\n        newMovie,\n      ];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onMoviesChange={onMoviesChange}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}